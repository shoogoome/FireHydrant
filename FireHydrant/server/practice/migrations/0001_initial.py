# Generated by Django 2.1.2 on 2019-10-11 15:20

import common.core.dao.time_stamp
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0003_accountexhibition'),
    ]

    operations = [
        migrations.CreateModel(
            name='PracticeArrangement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50)),
                ('day_of_week', models.PositiveSmallIntegerField(default=0)),
                ('start_week', models.PositiveSmallIntegerField(default=0)),
                ('end_week', models.PositiveSmallIntegerField(default=0)),
                ('odd_even', models.PositiveSmallIntegerField(choices=[(0, '单双周'), (1, '单周'), (2, '双周')], default=0)),
                ('start_section', models.PositiveSmallIntegerField(default=0)),
                ('end_section', models.PositiveSmallIntegerField(default=0)),
                ('start_time', models.PositiveIntegerField(default=0)),
                ('end_time', models.PositiveIntegerField(default=0)),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
            ],
            options={
                'verbose_name': '爱阅读后台管理课程排课',
                'verbose_name_plural': '爱阅读后台管理课程排课表',
            },
        ),
        migrations.CreateModel(
            name='PracticeAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leaver', models.IntegerField(default=0)),
                ('absent', models.IntegerField(default=0)),
                ('late', models.IntegerField(default=0)),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('arrangement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeArrangement')),
            ],
            options={
                'verbose_name': '爱阅读后台管理课程考勤',
                'verbose_name_plural': '爱阅读后台管理课程考勤表',
            },
        ),
        migrations.CreateModel(
            name='PracticeClassroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=125)),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
            ],
            options={
                'verbose_name': '爱阅读后台管理教室',
                'verbose_name_plural': '爱阅读后台管理教室表',
            },
        ),
        migrations.CreateModel(
            name='PracticeClassroomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('arrangement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeArrangement')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Account')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeClassroom')),
            ],
            options={
                'verbose_name': '爱阅读后台管理教室使用',
                'verbose_name_plural': '爱阅读后台管理教室使用表',
            },
        ),
        migrations.CreateModel(
            name='PracticeCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('description', models.CharField(max_length=255)),
                ('start_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('end_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.Account')),
            ],
            options={
                'verbose_name': '爱阅读后台管理课程',
                'verbose_name_plural': '爱阅读后台管理课程表',
            },
        ),
        migrations.CreateModel(
            name='PracticeEvaluateStudentToCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.PositiveSmallIntegerField(default=0)),
                ('message', models.TextField(default='')),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
            ],
            options={
                'verbose_name': '爱阅读后台管理课程学生评价课程',
                'verbose_name_plural': '爱阅读后台管理课程学生评价课程表',
            },
        ),
        migrations.CreateModel(
            name='PracticeEvaluateStudentToTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.PositiveSmallIntegerField(default=0)),
                ('message', models.TextField(default='')),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
            ],
            options={
                'verbose_name': '爱阅读后台管理课程学生评价教师',
                'verbose_name_plural': '爱阅读后台管理课程学生评价教师表',
            },
        ),
        migrations.CreateModel(
            name='PracticeEvaluateTeacherToStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.PositiveSmallIntegerField(default=0)),
                ('message', models.TextField(default='')),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Account')),
            ],
            options={
                'verbose_name': '爱阅读后台管理课程教师评价学生',
                'verbose_name_plural': '爱阅读后台管理课程教师评价学生表',
            },
        ),
        migrations.CreateModel(
            name='PracticeSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.CharField(blank=True, default='', max_length=200)),
                ('description', models.TextField(default='')),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
            ],
            options={
                'verbose_name': '爱阅读后台管理学校',
                'verbose_name_plural': '爱阅读后台管理学校表',
            },
        ),
        migrations.CreateModel(
            name='PracticeStudentUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('realname', models.CharField(max_length=255)),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Account')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeSchool')),
            ],
            options={
                'verbose_name': '爱阅读后台管理学生账户',
                'verbose_name_plural': '爱阅读后台管理学生账户表',
            },
        ),
        migrations.CreateModel(
            name='PracticeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125)),
                ('create_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('update_time', common.core.dao.time_stamp.TimeStampField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeTag')),
            ],
            options={
                'verbose_name': '爱阅读后台管理标签',
                'verbose_name_plural': '爱阅读后台管理标签表',
            },
        ),
        migrations.AddField(
            model_name='practiceevaluateteachertostudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeStudentUser'),
        ),
        migrations.AddField(
            model_name='practiceevaluatestudenttoteacher',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeStudentUser'),
        ),
        migrations.AddField(
            model_name='practiceevaluatestudenttoteacher',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Account'),
        ),
        migrations.AddField(
            model_name='practiceevaluatestudenttocourse',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeStudentUser'),
        ),
        migrations.AddField(
            model_name='practiceevaluatestudenttocourse',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeCourse'),
        ),
        migrations.AddField(
            model_name='practicecourse',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeSchool'),
        ),
        migrations.AddField(
            model_name='practicecourse',
            name='tag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='practice.PracticeTag'),
        ),
        migrations.AddField(
            model_name='practiceclassroom',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeSchool'),
        ),
        migrations.AddField(
            model_name='practiceattendance',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeCourse'),
        ),
        migrations.AddField(
            model_name='practiceattendance',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeSchool'),
        ),
        migrations.AddField(
            model_name='practiceattendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeStudentUser'),
        ),
        migrations.AddField(
            model_name='practicearrangement',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice.PracticeCourse'),
        ),
        migrations.AddField(
            model_name='practicearrangement',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='course_arrangement_student', to='practice.PracticeStudentUser'),
        ),
    ]
